#!/usr/bin/env bash
# INTEL CONFIDENTIAL
#
# Copyright 2020-2022 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.


# This script is used to artifacts infomation in pwek sriovnetworknodepolicy.
# copy this file to /usr/local/bin/ before use.
# usage:
#   kubectl sriov sriovnetworknodepolicy get ~[resource]
# or
#   kubectl sriov sriovnetworknodepolicy get [resource]
# Note:
#   for autocompletion, please ref: https://github.com/kubernetes/kubernetes/issues/74178
#   for template, please ref: https://kubernetes.io/docs/reference/kubectl/cheatsheet/
#   for jq keys and values, please ref: https://stackoverflow.com/questions/34226370/jq-print-key-and-value-for-each-entry-in-an-object
#   for pattern argument: There is a prefix "~" and sufix with substring. It does not support regular expression.


if [[ "$1" == "~"* ]]; then
  res="${1#\~}"
  echo "---- sriovnetworknodepolicy name contains '$res' ----"
  kubectl -n sriov-network-operator get sriovnetworknodepolicy -o json | \
    jq ".items[] |  select( .metadata.name | contains(\"$res\")) | {name: .metadata.name, spec: .spec}"
  echo "---- sriovnetworknodepolicy resourceName contains '$res' ----"
  kubectl -n sriov-network-operator get sriovnetworknodepolicy -o json | \
    jq ".items[] |  select( .spec.resourceName | contains(\"$res\")) | {name: .metadata.name, spec: .spec}"
  exit 0
fi

if [ -z "$1" ]; then
  kubectl -n sriov-network-operator get sriovnetworknodepolicy
  echo "---- Policy resourceName map: ----"
  kubectl -n sriov-network-operator get sriovnetworknodepolicy -o json | \
    jq ".items[] | {name: .metadata.name, resourceName: .spec.resourceName}"
  exit 0
else
  kubectl -n sriov-network-operator get sriovnetworknodepolicy "$1" -o json | jq .spec
fi
