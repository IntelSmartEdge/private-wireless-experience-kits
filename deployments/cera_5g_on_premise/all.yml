# INTEL CONFIDENTIAL
#
# Copyright 2020-2021 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---

### CERA applications configuration

## Interface logical name (PF) used for fronthaul
fronthaul_if_name: "enp184s0f0"

## PF interface name of N3, N4, N6, N9 created VFs
host_if_name_cn: "eno1"

# Choose which demo will be launched: `eis` or `openvino`
# To do not deploy any demo app, refer to `edgeapps_deployment_enable` variable
deploy_demo_app: "openvino"

## EIS demo app variables
# provide EIS release package archive absolute path
eis_release_package_path: ""
# For eis demo app type choose demo type as `pcb` or `safety`
eis_demo_app_type: "pcb"

## OpenVINO vars
model: "pedestrian-detection-adas-0002"
display_host_ip: ""  # update ip for visualizer HOST GUI.
save_video: "enable"
target_device: "CPU"

### CEEK configuration

kubernetes_cnis:
  - calico
  - sriov

## FPGA configuration
# FPGA SRIOV Userspace
fpga_sriov_userspace_enable: true

# FPGA Userspace VF configuration
fpga_userspace_vf:
  enabled: true
  vendor_id: "8086"
  vf_device_id: "0d90"
  pf_device_id: "0d8f"
  vf_number: "2"
  vf_driver: "igb_uio"

## QAT Device Plugin
qat_device_plugin_enable: true

## OPAE FPGA
ne_opae_fpga_enable: true

## BIOSFW
# Enable BIOSFW feature (requires SYSCFG package provided by user)
ne_biosfw_enable: true

## Kubernetes Topology Manager configuration (for worker)
# CPU settings
cpu:
  # CPU policy - possible values: none (disabled), static (default)
  policy: "static"
  # Reserved CPUs
  reserved_cpus: "0,1"

# Kubernetes Topology Manager policy - possible values: none (disabled), best-effort (default), restricted, single-numa-node
topology_manager:
  policy: "single-numa-node"

## Network Edge Node Feature Discovery (NFD)
ne_nfd_enable: true

## Telemetry
# Network Edge Processor Counter Monitor (PCM)
telemetry_pcm_enable: true

# Telemetry flavor - possible values: common (default), flexran, smartcity, corenetwork
telemetry_flavor: flexran

# Network Edge Grafana
telemetry_grafana_enable: true

## RMD
rmd_operator_enable: true

# 'build' - build image from scratch
# 'import' - import already built image
i_upf_docker_image_source: 'build'

# Prepared docker image must be located on target machine
# This option must be set for import mode
i_upf_docker_image_path: "/root/iupf_docker_image.tar.gz"

# Binaries must be located on Ansible machine
# This option must be set for build mode
i_upf_binaries_path: "/root/i-upf"

# 'build' - build image from scratch
# 'import' - import already built image
gnb_docker_image_source: 'build'

# Prepared docker image must be located on target machine
# This option must be set for import mode
gnb_docker_image_path: "/root/gnb_docker_image.tar.gz"

# All following files must be located on target machine
# Those options must be set for build mode
gnb_dpdk_patch: /root/gnb_build/dpdk_19.11_20.11.patch
gnb_system_studio: /root/gnb_build/system_studio_2019_update_3_composer_edition_offline.tar.gz
gnb_system_studio_license: /root/gnb_build/license
gnb_flexran_extracted: /root/gnb_build/flexran/
gnb_cu_du_bin_extracted: /root/gnb_build/
gnb_confd: /root/gnb_build/confd-basic-7.3.linux.x86_64.tar.gz

# list of json strings to be appended to configmap
# WARNING: config must be inside single quotes and with leading space
# otherwise it'll be converted internally to json and outputed with single quotes instead of double quotes
# following is a correct example:
# - ' {
#     "resourceName": "intel_res_name",
#      "selectors": {
#          "drivers": ["vfio-pci"],
#          "devices": ["0d90"]
#      }
#   }'
_sriov_dp_configmap_extension:
  - ' {
     "resourceName": "intel_sriov_VF_G1",
      "selectors": {
          "drivers": ["i40evf", "iavf"],
          "pfNames": ["{{ fronthaul_if_name }}"]
      }
   }'
  - ' {
     "resourceName": "intel_sriov_VF_G2",
      "selectors": {
          "drivers": ["i40evf", "iavf"],
          "pfNames": ["{{ host_if_name_cn }}"]
      }
   }'

# list of CRDs strings to be appended to crd.yml
_sriov_dp_crd_extension:
  - |
    apiVersion: "k8s.cni.cncf.io/v1"
    kind: NetworkAttachmentDefinition
    metadata:
      name: sriov-openness
      namespace: "{{ cera_namespace_name }}"
      annotations:
        k8s.v1.cni.cncf.io/resourceName: intel.com/intel_sriov_dpdk
    spec:
      config: '{
      "type": "sriov",
      "cniVersion": "0.3.1",
      "name": "sriov-openness-network"
    }'
  - |
    apiVersion: "k8s.cni.cncf.io/v1"
    kind: NetworkAttachmentDefinition
    metadata:
      namespace: "{{ cera_namespace_name }}"
      name: sriov-openness-vf-g1
      annotations:
        k8s.v1.cni.cncf.io/resourceName: intel.com/intel_sriov_VF_G1
    spec:
      config: '{
      "type": "sriov",
      "cniVersion": "0.3.1",
      "name": "sriov-network"
    }'
  - |
    apiVersion: "k8s.cni.cncf.io/v1"
    kind: NetworkAttachmentDefinition
    metadata:
      namespace: "{{ cera_namespace_name }}"
      name: sriov-openness-vf-g2
      annotations:
        k8s.v1.cni.cncf.io/resourceName: intel.com/intel_sriov_VF_G2
    spec:
      config: '{
      "type": "sriov",
      "cniVersion": "0.3.1",
      "name": "sriov-network"
    }'

# list of namespace strings to be created for crd.yml
_sriov_dp_crd_extension_ns: ["{{ cera_namespace_name }}"]

## Enable cgroupfs to be used as a cgroup driver instead of systemd.
cgroupfs_enable: true

## Enabling roles in the main playbook
set_core_network_interfaces: true
set_gnodeb_interfaces: true
edgeapps_repo_enable: true
cera_namespace_enable: true
cera_charts_path_enable: true
i_upf_enable: true
gnodeb_enable: true
edgeapps_deployment_enable: true

# SR-IOV support for kube-virt based Virtual Machines
sriov_kubevirt_enable: false
# Kube-virt settings
kubevirt_enable: false

# Deploy OpenNESS services
openness_enable: true
## Edge DNS
dns_enable: true

## Network Service Mesh
ne_nsm_enable: false
