# INTEL CONFIDENTIAL
#
# Copyright 2020-2021 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---

### CERA applications configuration

## PF interface name of N4, N6, N9 created VFs
host_if_name_cn: "eno1"

### CEEK configuration variables

kubernetes_cnis:
  - calico
  - sriov

## BIOS-FW
# Enable BIOSFW feature (requires SYSCFG package provided by user)
ne_biosfw_enable: true

# list of json strings to be appended to configmap
# WARNING: config must be inside single quotes and with leading space
# otherwise it'll be converted internally to json and outputed with single quotes instead of double quotes
# following is a correct example:
# - ' {
#     "resourceName": "intel_res_name",
#      "selectors": {
#          "drivers": ["vfio-pci"],
#          "devices": ["0d90"]
#      }
#   }'
_sriov_dp_configmap_extension:
  - ' {
     "resourceName": "intel_sriov_VF_G2",
      "selectors": {
          "drivers": ["i40evf", "iavf"],
          "pfNames": ["{{ host_if_name_cn }}"]
      }
   }'

# list of CRDs strings to be appended to crd.yml
_sriov_dp_crd_extension:
  - |
    apiVersion: "k8s.cni.cncf.io/v1"
    kind: NetworkAttachmentDefinition
    metadata:
      name: sriov-openness
      namespace: "{{ cera_namespace_name }}"
      annotations:
        k8s.v1.cni.cncf.io/resourceName: intel.com/intel_sriov_dpdk
    spec:
      config: '{
      "type": "sriov",
      "cniVersion": "0.3.1",
      "name": "sriov-openness-network"
    }'
  - |
    apiVersion: "k8s.cni.cncf.io/v1"
    kind: NetworkAttachmentDefinition
    metadata:
      namespace: "{{ cera_namespace_name }}"
      name: sriov-openness-vf-g2
      annotations:
        k8s.v1.cni.cncf.io/resourceName: intel.com/intel_sriov_VF_G2
    spec:
      config: '{
      "type": "sriov",
      "cniVersion": "0.3.1",
      "name": "sriov-network"
    }'

# list of namespace strings to be created for crd.yml
_sriov_dp_crd_extension_ns: ["{{ cera_namespace_name }}"]


# 'build' - build image from scratch
# 'import' - import already built image
amf_smf_docker_image_source: 'build'

# Prepared docker image must be located on target machine
# This option must be set for import mode
amf_smf_docker_image_path: "/root/amf_smf_docker_image.tar.gz"

# Binaries must be located on Ansible machine
# This option must be set for build mode
amf_smf_binaries_path: "/root/amf_smf_binaries"

# 'build' - build image from scratch
# 'import' - import already built image
psa_upf_docker_image_source: 'build'

# Prepared docker image must be located on target machine
# This option must be set for import mode
psa_upf_docker_image_path: "/root/psa_upf_docker_image.tar.gz"

# Binaries must be located on Ansible machine
# This option must be set for build mode
psa_upf_binaries_path: "/root/psa-upf"

### Enabling roles in the IDO main playbook
set_core_network_interfaces: true
edgeapps_repo_enable: true
cera_namespace_enable: true
cera_charts_path_enable: true
psa_upf_enable: true
amf_smf_enable: true
remote_dn_enable: true

# SR-IOV support for kube-virt based Virtual Machines
sriov_kubevirt_enable: false
# Kube-virt settings
kubevirt_enable: false

# Deploy OpenNESS services
openness_enable: true
## Edge DNS
dns_enable: true

## Network Service Mesh
ne_nsm_enable: false
