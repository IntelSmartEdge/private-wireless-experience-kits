#!/bin/bash

# INTEL CONFIDENTIAL
#
# Copyright 2020-2021 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

# patch the daemon, or it will failed.

CMPATH="/spec/template/spec/containers/0/imagePullPolicy"
CMVALUE="IfNotPresent"

DS=sriov-release-kube-sriov-cni-ds-amd64
res=`kubectl -n kube-system patch DaemonSets/$DS --type='json' -p '[
{"op":"add","path":"'"$CMPATH"'","value": '"$CMVALUE"'},
]'`
ret=$?
grep "no change" <<< $res
if [[ $ret -eq 0 && $? -ne 0 ]]; then
  kubectl delete pods -l name=sriov-cni -n kube-system  --force
fi

DS=sriov-release-kube-sriov-device-plugin-amd64
CM_P='/spec/template/spec/volumes/2/configMap/name'
SRIOV_DP_CM=${SRIOV_DP_CM:-sriov-release-sriovdp-config}
res=`kubectl -n kube-system patch DaemonSets/$DS --type='json' -p '[
{"op":"add","path":"'"$CMPATH"'","value": '"$CMVALUE"'},
{"op":"add","path":"'"$CM_P"'","value": "'"$SRIOV_DP_CM"'"}
]'`

ret=$?
grep "no change" <<< $res
if [[ $ret -eq 0 && $? -ne 0 ]]; then
  kubectl delete pods -l name=sriov-device-plugin -n kube-system  --force
fi

sleep 20

j=10
for ((i=1; i<=j; i++))
do
kubectl get pods -l name=sriov-device-plugin -n kube-system|grep Running >/dev/null
    if [ $? -ne 0 ]; then
      echo "waiting for pod label named sriov-device-plugin to Running"
      sleep 20
     else
      echo "sriov-device-plugin is running "
      exit 0
      fi
done
exit 1
