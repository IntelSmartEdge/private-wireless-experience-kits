# INTEL CONFIDENTIAL
#
# Copyright 2020-2021 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---
- name: retries to start CU
  block:
  - name: set retry counter
    set_fact:
      retry_count: "{{ 0 if retry_count is undefined else retry_count | int + 1 }}"

  - name: rewrite configure file for cu
    command: "./modify_config.sh {{ retry_count }} {{ setconfig_file_path }}"
    args:
      chdir: "{{ pwek_gnodeb_scripts_path }}"
    changed_when: true
    become: yes

  - name: kill CU process before start again
    shell: >
      kubectl  -n {{ pwek_namespace_name }} exec pod/flexran-5gnr-bbu-l2cu -c bbu-l2cu-ctr -- sh  -c "/sbin/killall5 1"
    changed_when: false
    failed_when: false
    become: yes

  - name: start cu session   # noqa command-instead-of-shell
    shell: "./start_cu.sh"
    args:
      chdir: "{{ pwek_gnodeb_scripts_path }}"
    changed_when: true
    environment:
      TERM: xterm
    register: cu_result
    become: yes
    delegate_to: "{{ groups['controller_group'][0] }}"

  - name: check cu_result and retry_count
    debug:
      msg:
        - "cu_result: {{ cu_result }}"
        - "retry_count: {{ retry_count }}"

  rescue:
    - name: Fail if retry counter limit is reached
      fail:
        msg: retry counter limit reached
      when: retry_count | int == retries_qat_num.stdout | int

    - name: wait before next round
      wait_for:
        timeout: "10"
      delegate_to: localhost
      become: false

    - include_tasks: start_cu.yml
