# INTEL CONFIDENTIAL
#
# Copyright 2020-2020 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---
- block:
    - name: create temporary custom .openness_gitconfig
      include_tasks: ../../../../../../opendek/roles/baseline_ansible/infrastructure/git_repo/tasks/gitconfig_bootstrap.yml
    - name: build cntf component
      shell: source /etc/profile && make cntf
      args:
        chdir: "{{ _git_repo_ngc_dir }}"
  always:
    - name: remove .openness_gitconfig
      include_tasks: ../../../../../../opendek/roles/baseline_ansible/infrastructure/git_repo/tasks/gitconfig_remove.yml

- name: copy cntf binaries to build folder
  copy:
    src: "{{ _git_repo_ngc_dist_dir }}/cntf"
    remote_src: true
    dest: "{{ _git_repo_ngc_build_dir }}/networkedge/cntf"
    mode: preserve

- name: copy cntf.json configuration file
  copy:
    src: "{{ _git_repo_ngc_dir }}/configs/cntf.json"
    remote_src: true
    dest: "{{ _configs_dest }}/ngc"
    mode: preserve

- name: copy oauth2.json configuration file
  copy:
    src: "{{ _git_repo_ngc_dir }}/configs/oauth2.json"
    remote_src: true
    dest: "{{ _configs_dest }}/ngc"
    mode: preserve

- name: build cntf docker image
  docker_image:
    name: "{{ _image_name.cntf }}"
    tag: "{{ _image_tag.cntf }}"
    source: build
    build:
      path: "{{ _git_repo_ngc_build_dir }}/networkedge/cntf"
      pull: true
      use_config_proxy: true

# Additions for Helm chart
- name: remove CNTF release if exist
  block:
    - name: check if cntf release exists
      command: helm status "{{ _helm_release_name.cntf }}"
      failed_when: false
      register: get_release
    - name: remove cntf release
      command: helm uninstall "{{ _helm_release_name.cntf }}"
      when: get_release.rc == 0
      changed_when: true

- name: tag CNTF docker image and push to Harbor registry
  docker_image:
    name: "{{ _image_name.cntf }}"
    repository: "{{ _registry_ip_address }}:{{ _registry_port }}/intel/{{ _image_name.cntf }}"
    tag: "{{ _image_tag.cntf }}"
    push: true
    source: local

- name: remove the locally built CNTF docker image
  docker_image:
    state: absent
    name: "{{ _image_name.cntf }}"
    tag: "{{ _image_tag.cntf }}"

- name: Copy CNTF helm chart
  copy:
    src: "{{ _helm_location }}/cntf"
    remote_src: true
    dest: "{{ ne_helm_charts_default_dir }}"
    mode: preserve

- name: create ngc config maps for configs-cntf
  block:
    - name: remove if config map already exists
      command: kubectl delete configmap cntf-cm -n ngc
      failed_when: false
    - name: create cntf config map template
      shell:
        cmd: >
          kubectl create configmap cntf-cm --from-file={{ _configs_dest }}/ngc/cntf.json -n ngc --dry-run=client -o yaml
          &> "{{ ne_helm_charts_default_dir }}/{{ _helm_release_name.cntf }}/templates/configmapCNTF.yaml"

# retry required since as part of  the previous uninstallation if the
# pods are still not completely deleted as it might take some time
- name: install the CNTF helm chart
  command: >
    helm install {{ _helm_release_name.cntf }} {{ ne_helm_charts_default_dir }}/{{ _helm_release_name.cntf }}
    --set image.repository={{ _registry_ip_address }}:{{ _registry_port }}/intel/{{ _image_name.cntf }}
  changed_when: true
  register: result
  retries: "{{ number_of_retries }}"
  until: result is succeeded
  delay: "{{ retry_delay }}"
