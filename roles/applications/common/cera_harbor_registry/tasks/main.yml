# INTEL CONFIDENTIAL
#
# Copyright 2020-2020 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---

# Variables that should be set:
# - name
# - tag
# - docker_file
# - binaries
# - docker_tar_image_path
# - docker_image_source

- name: login harbor registry firstly
  command: docker login "{{ openness_harbor_registry_ip }}:{{ docker_registry_port }}" -uadmin -p{{ harbor_admin_password }}
  retries: 60
  delay: 15
  failed_when: false
  changed_when: false

- name: pull {{ name }} image
  docker_image:
    name: "{{ name }}"
    tag: "{{ tag }}"
    source: pull
  failed_when: false

- name: Check if the image already exists
  shell: >
    set -o pipefail && docker images | grep "{{ name }}" | grep "{{ tag }}"
  register: docker_image_found
  failed_when: false
  changed_when: false

- name: Build docker image from scratch
  block:
  - name: 'Create directory for docker image'
    file:
      path: '{{ cera_images_path }}{{ name }}'
      state: directory
      recurse: true

  - name: 'Copy docker file to host'
    copy:
      src: '{{ docker_file }}'
      dest: '{{ cera_images_path }}{{ name }}'
      mode: preserve
      backup: false

  - name: 'Copy binaries to host'
    copy:
      src: '{{ binaries }}'
      dest: '{{ cera_images_path }}{{ name }}'
      mode: preserve
      backup: false

  - name: Build docker image and push to registry
    docker_image:
      name: "{{ name }}"
      repository: "{{ openness_harbor_registry_address }}/{{ name }}"
      tag: "{{ tag }}"
      source: build
      build:
        path: '{{ cera_images_path }}{{ name }}'
        use_config_proxy: true
        pull: true
        args:
          binaries_path: '{{ binaries | basename }}'
      push: true
  when: docker_image_found.rc != 0 and docker_image_source == "build"

- name: Load docker image from archive and push to registry
  docker_image:
    name: "{{ name }}"
    repository: "{{ openness_harbor_registry_address }}/{{ name }}"
    tag: "{{ tag }}"
    push: true
    load_path: "{{ docker_tar_image_path }}"
  when: docker_image_found.rc != 0 and docker_image_source == "import"

- name: remove local image
  docker_image:
    state: absent
    name: "{{ name }}"
    tag: "{{ tag }}"
  when: docker_image_found.rc != 0

- name: 'Deploy {{ name }} pod'
  command: 'helm install -n {{ cera_namespace_name }} {{ name }} {{ name }}/'
  args:
    chdir: '{{ cera_charts_path }}'
  changed_when: false
