# INTEL CONFIDENTIAL
#
# Copyright 2020-2020 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---

- name: Install packages dependencies for L1/CU/DU applications deployment
  include_tasks: ./tasks/install_packages_dependencies.yml

- name: Set MAC address on VFs
  block:
  - name: Set interface down
    command: 'ip link set {{ fronthaul_if_name }} down'
    changed_when: false
    become: yes
  - name: Set MAC on VF0
    command: 'ip link set {{ fronthaul_if_name }} vf 0 mac {{ gnodeb_fronthaul_vf_mac }} vlan 2'
    changed_when: false
    become: yes
  - name: Set MAC on VF1
    command: 'ip link set {{ fronthaul_if_name }} vf 1 mac {{ gnodeb_fronthaul_vf_mac }} vlan 1'
    changed_when: false
    become: yes
  - name: Set interface up
    command: 'ip link set {{ fronthaul_if_name }} up'
    changed_when: false
    become: yes

- name: Launch intel-fpga-cfg to set FEC queues
  block:
  - name: Uninstall deployment
    command: 'helm uninstall intel-fpga-cfg'
    args:
      chdir: '{{ project_dir }}/helm-charts/'
    changed_when: true
    failed_when: false
  - name: Verify the intel-fpga-cfg deployment has been uninstalled
    shell: kubectl get pods | grep intel-fpga-cfg
    register: status_rc
    until: status_rc.rc == 1
    retries: 20
    delay: 1
    changed_when: false
    failed_when: false
  - name: Install deployment
    command: 'helm install --set nodeName={{ node_name }} intel-fpga-cfg bb_config'
    args:
      chdir: '{{ project_dir }}/helm-charts/'
    changed_when: false

- name: 'Create directory for helm chart values'
  file:
    path: '{{ gnodeb_chart_path }}'
    state: directory
    recurse: true
    mode: a=rx,u+w

- name: 'Copy helm chart to host'
  copy:
    src: '{{ _edgeapps_git_repo.dest }}/network-functions/ran/charts/gnb/'
    dest: '{{ gnodeb_chart_path }}'
    mode: preserve
    backup: false

- name: 'Copy helm chart values to host'
  template:
    src: 'values.yaml.j2'
    dest: '{{ gnodeb_chart_path }}/values.yaml'
    mode: preserve
    backup: false

- name: '{{ app_name }} deployment'
  block:
  - name: login harbor registry firstly
    command: docker login "{{ openness_harbor_registry_ip }}:{{ docker_registry_port }}" -uadmin -p{{ harbor_admin_password }}
    retries: 60
    delay: 15
    failed_when: false

  - name: pull {{ app_name }} image
    docker_image:
      name: "{{ app_name }}"
      tag: "{{ image_tag }}"
      source: pull
    failed_when: false

  - name: Check if the image already exists
    shell: >
      docker images | grep "{{ app_name }}" | grep "{{ image_tag }}"
    register: docker_image_found
    failed_when: false

  - include_tasks: build.yml
    when: docker_image_found.rc != 0 and gnb_docker_image_source == 'build'

  - name: Load docker image from archive
    docker_image:
      name: "{{ app_name }}"
      repository: "{{ app_name }}"
      tag: "{{ image_tag }}"
      load_path: "{{ gnb_docker_image_path }}"
    when: docker_image_found.rc != 0 and gnb_docker_image_source == 'import'

  - name: Push docker image to registry
    docker_image:
      name: "{{ app_name }}"
      repository: "{{ openness_harbor_registry_address }}/{{ app_name }}"
      tag: "{{ image_tag }}"
      push: true
    when: docker_image_found.rc != 0 and gnb_docker_image_source == 'import'

  - name: Remove local image
    docker_image:
      state: absent
      name: "{{ app_name }}"
      tag: "{{ image_tag }}"
    when: docker_image_found.rc != 0

  - name: 'Deploy gNodeB POD'
    command: 'helm install -n {{ cera_namespace_name }} --set isPrivileged=true {{ app_name }} {{ gnodeb_chart_path }}'
    changed_when: false

- include_tasks: configuregnb.yml

- include_tasks: startgnb.yml
