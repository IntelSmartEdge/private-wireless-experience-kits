# INTEL CONFIDENTIAL
#
# Copyright 2020-2022 Intel Corporation.
#
# This software and the related documents are Intel copyrighted materials, and your use of
# them is governed by the express license under which they were provided to you ("License").
# Unless the License provides otherwise, you may not use, modify, copy, publish, distribute,
# disclose or transmit this software or the related documents without Intel's prior written permission.
#
# This software and the related documents are provided as is, with no express or implied warranties,
# other than those that are expressly stated in the License.

---

# config node selector

- name: update controller label for cn values
  replace:
    path: "{{ helm_chart_path }}/cn/values.yaml"
    regexp: "nodeSelector: { testnode: edge-cp }"
    replace: "nodeSelector: { {{ pwek_ctl_lable }} }"

- name: update node label for cn values
  replace:
    path: "{{ helm_chart_path }}/cn/values.yaml"
    regexp: "nodeSelector: { testnode: edge-node }"
    replace: "nodeSelector: { {{ pwek_node_lable }} }"

- name: update node label for cu values
  replace:
    path: "{{ helm_chart_path }}/cu/values.yaml"
    regexp: "nodeSelector:.*$"
    replace: "nodeSelector: { {{ pwek_node_lable }} }"

- name: update node label for du values
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "nodeSelector:.*$"
    replace: "nodeSelector: { {{ pwek_node_lable }} }"

# config Phy file

- name: get fh vf pci bus info
  shell: set -o pipefail && ethtool -i {{ fh_name }} | awk 'NR==5 {print $2}'
  register: fh_bus_info
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: get fh vf pci address 1
  shell: set -o pipefail && ls /sys/bus/pci/devices/{{ fh_bus_info.stdout }}/virtfn* -l | awk 'NR==1 {print $11}' | cut -b 4-
  register: fh_pci_address_1
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: get fh vf pci address 2
  shell: set -o pipefail && ls /sys/bus/pci/devices/{{ fh_bus_info.stdout }}/virtfn* -l | awk 'NR==2 {print $11}' | cut -b 4-
  register: fh_pci_address_2
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: update fh vf pci address phy config files 1
  replace:
    path: "{{ helm_chart_path }}/du/l1config/xrancfg_sub6.xml"
    regexp: "<PciBusAddoRu0Vf0>.*$"
    replace: "<PciBusAddoRu0Vf0>{{ fh_pci_address_1.stdout }}</PciBusAddoRu0Vf0>"

- name: update fh vf pci address phy config files 2
  replace:
    path: "{{ helm_chart_path }}/du/l1config/xrancfg_sub6.xml"
    regexp: "<PciBusAddoRu0Vf1>.*$"
    replace: "<PciBusAddoRu0Vf1>{{ fh_pci_address_2.stdout }}</PciBusAddoRu0Vf1>"
  when: fh_pci_address_2.stdout|length != 0

- name: update oRuCUon1Vf for phy with e810 disabled
  replace:
    path: "{{ helm_chart_path }}/du/l1config/xrancfg_sub6.xml"
    regexp: "<oRuCUon1Vf>.*$"
    replace: "<oRuCUon1Vf>{{ oRuCUon1Vf_810_disabled }}</oRuCUon1Vf>"
  when: not fronthaul_e810_enable

- name: update u_plane_vlan_tag for phy with e810 disabled
  replace:
    path: "{{ helm_chart_path }}/du/l1config/xrancfg_sub6.xml"
    regexp: "<u_plane_vlan_tag>.*$"
    replace: "<u_plane_vlan_tag>{{ u_plane_vlan_tag_810_disabled }}</u_plane_vlan_tag>"
  when: not fronthaul_e810_enable

- name: update oRuCUon1Vf for phy with e810 enabled
  replace:
    path: "{{ helm_chart_path }}/du/l1config/xrancfg_sub6.xml"
    regexp: "<oRuCUon1Vf>.*$"
    replace: "<oRuCUon1Vf>{{ oRuCUon1Vf_810_enabled }}</oRuCUon1Vf>"
  when: fronthaul_e810_enable

- name: update u_plane_vlan_tag for phy with e810 enabled
  replace:
    path: "{{ helm_chart_path }}/du/l1config/xrancfg_sub6.xml"
    regexp: "<u_plane_vlan_tag>.*$"
    replace: "<u_plane_vlan_tag>{{ u_plane_vlan_tag_810_enabled }}</u_plane_vlan_tag>"
  when: fronthaul_e810_enable

- name: update fhVf for du with e810 disabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "fhVf:.*$"
    replace: "fhVf: {{ fhVf_810_disabled }}"
  when: not fronthaul_e810_enable

- name: update uplaneVlan for du with e810 disabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "uplaneVlan:.*$"
    replace: "uplaneVlan: {{ uplaneVlan_810_disabled }}"
  when: not fronthaul_e810_enable

- name: update fhVf for du with e810 enabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "fhVf:.*$"
    replace: "fhVf: {{ fhVf_810_enabled }}"
  when: fronthaul_e810_enable

- name: update uplaneVlan for du with e810 enabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "uplaneVlan:.*$"
    replace: "uplaneVlan: {{ uplaneVlan_810_enabled }}"
  when: fronthaul_e810_enable

- name: update uplaneResource for du with e810 enabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "nicType:.*$"
    replace: "nicType: E810"
  when: fronthaul_e810_enable

- name: update uplaneResource for du with e810 disabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "nicType:.*$"
    replace: "nicType: X710"
  when: not fronthaul_e810_enable

- name: update cplaneResourceName for du with e810 enabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "cplaneResourceName:.*$"
    replace: "cplaneResourceName: intel_sriov_10G_RRU_VF0"
  when: fronthaul_e810_enable

- name: update cplaneResourceName for du with e810 disabled
  replace:
    path: "{{ helm_chart_path }}/du/values.yaml"
    regexp: "cplaneResourceName:.*$"
    replace: "cplaneResourceName: intel_sriov_10G_RRU_VF1"
  when: not fronthaul_e810_enable

# config QAT

- name: get qat device id and pci address
  shell: set -o pipefail && lspci -nn | grep Quick | awk 'NR==1 {print $10}' | cut -b 7-10
  register: qat_device_addr
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: calculate qat vf device pci address
  shell: set -o pipefail && echo "obase=16; $((16#{{ qat_device_addr.stdout }} + 1))" | bc
  register: qat_vf_device_addr
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: check qat vf device pci address 1
  shell: set -o pipefail && lspci | grep {{ qat_vf_device_addr.stdout | lower }} | awk 'NR==1 {print $1}'
  register: qat_vf_device_addr_1
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: check qat vf device pci address 2
  shell: set -o pipefail && lspci | grep {{ qat_vf_device_addr.stdout | lower }} | awk 'NR==2 {print $1}'
  register: qat_vf_device_addr_2
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: assemble qat vf device pci address 1
  shell: set -o pipefail && echo "0000:{{ qat_vf_device_addr_1.stdout }}"
  register: qat_vf_device_addr_1
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: assemble qat vf device pci address 2
  shell: set -o pipefail && echo "0000:{{ qat_vf_device_addr_2.stdout }}"
  register: qat_vf_device_addr_2
  delegate_to: "{{ groups['edgenode_group'][0] }}"
  changed_when: true
  become: yes

- name: update qat vf device pci address 1
  replace:
    path: "{{ helm_chart_path }}/cu/values.yaml"
    regexp: "fastCryptoPort0Pci:.*$"
    replace: "fastCryptoPort0Pci: {{ qat_vf_device_addr_1.stdout }}"

- name: update qat vf device pci address 2
  replace:
    path: "{{ helm_chart_path }}/cu/values.yaml"
    regexp: "fastCryptoPort1Pci:.*$"
    replace: "fastCryptoPort1Pci: {{ qat_vf_device_addr_2.stdout }}"

- name: update upfoam namespace
  replace:
    path: "{{ helm_chart_path }}/cn/charts/upfoam/config/oam_upf_config_cdb.xml"
    regexp: ".pwek-rdc"
    replace: ".{{ pwek_namespace_name }}"
    after: "<upf-db>"
    before: "</upf-db>"

- name: update upfoam namespace
  replace:
    path: "{{ helm_chart_path }}/cn/charts/upfoam/config/oam_upf_config_cdb.xml"
    regexp: ".pwek-rdc"
    replace: ".{{ pwek_namespace_name }}"
    after: "</plmnList>"
    before: "<sNssais>"
